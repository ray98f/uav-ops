<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uav.ops.mapper.ProblemMapper">

    <select id="listProblemType" resultType="com.uav.ops.dto.res.ProblemTypeResDTO">
        select id, parent_id, type_name, type_code, status, create_date, level
        from t_problem_type where is_delete=0
        <if test="name!=null and name!=''">
            and type_name like concat('%', #{name}, '%')
        </if>
        <if test="parentId==null">
            and level=1
        </if>
        <if test="parentId!=null and parentId!=''">
            and level=2 and parent_id=#{parentId}
        </if>
        order by create_date desc
    </select>

    <select id="listAllProblemType" resultType="com.uav.ops.dto.res.ProblemTypeResDTO">
        select pt1.id, pt1.parent_id, pt1.type_code, pt1.status, pt1.create_date, pt1.level
        <if test="parentId==null and type==1">
            , pt1.type_name
        </if>
        <if test="(parentId!=null and parentId!='' and type==1) or type==2">
            , concat((select pt2.type_name from t_problem_type as pt2 where pt2.id=pt1.parent_id), '-', pt1.type_name) as type_name
        </if>
        from t_problem_type as pt1 where pt1.is_delete=0 and pt1.status=0
        <if test="parentId==null and type==1">
            and pt1.level=1
        </if>
        <if test="parentId!=null and parentId!='' and type==1">
            and pt1.level=2 and pt1.parent_id=#{parentId}
        </if>
        <if test="type==2">
            and pt1.level=2
        </if>
        order by pt1.create_date desc
    </select>

    <select id="getProblemTypeDetail" resultType="com.uav.ops.dto.res.ProblemTypeResDTO">
        select id, parent_id, type_name, type_code, status, create_date, level
        from t_problem_type where is_delete=0 and id=#{id}
    </select>

    <select id="selectProblemTypeIsExist" resultType="java.lang.Integer">
        select count(1) from t_problem_type
        where type_name=#{typeName} and is_delete=0 and level=#{level} and parent_id=#{parentId}
        <if test="id!=null and id!=''">
            and id!=#{id}
        </if>
        limit 1
    </select>

    <insert id="addProblemType">
        insert into t_problem_type(id, type_name, type_code, level, parent_id,
        <if test="status!=null">
            status,
        </if>
        create_by)
        value (#{id}, #{typeName}, #{typeCode}, #{level}, #{parentId},
        <if test="status!=null">
            #{status},
        </if>
        #{userId})
    </insert>

    <update id="modifyProblemType">
        update t_problem_type set
        <if test="level!=null">
            level=#{level},
        </if>
        <if test="parentId!=null">
            parent_id=#{parentId},
        </if>
        <if test="typeName!=null">
            type_name=#{typeName},
        </if>
        <if test="typeCode!=null">
            type_code=#{typeCode},
        </if>
        <if test="status!=null">
            status=#{status},
        </if>
        update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <update id="deleteProblemType">
        update t_problem_type set
        is_delete=1, update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <select id="listProblemIdentify" resultType="com.uav.ops.dto.res.ProblemIdentifyResDTO">
        select id, lng, lat, address, info, image_url, is_checked, status, create_date from t_problem_check
        where is_delete=0
        <if test="name!=null and name!=''">
            and info like concat('%', #{name}, '%')
        </if>
        order by create_date desc
    </select>

    <select id="listNotBindProblemIdentify" resultType="com.uav.ops.dto.res.ProblemIdentifyResDTO">
        select id, lng, lat, address, info, image_url, is_checked, status, create_date from t_problem_check
        where is_delete=0 and is_checked=0
        <if test="name!=null and name!=''">
            and info like concat('%', #{name}, '%')
        </if>
        order by create_date desc
    </select>

    <select id="getProblemIdentifyDetail" resultType="com.uav.ops.dto.res.ProblemIdentifyResDTO">
        select id, lng, lat, address, info, image_url, is_checked, status, create_date from t_problem_check
        where is_delete=0 and id=#{id}
    </select>

    <insert id="addProblemIdentify">
        insert into t_problem_check(id, lng, lat, address, info, image_url,
        <if test="isChecked!=null">
            is_checked,
        </if>
        <if test="status!=null">
            status,
        </if>
        create_by)
        value (#{id}, #{lng}, #{lat}, #{address}, #{info}, #{imageUrl},
        <if test="isChecked!=null">
            #{isChecked},
        </if>
        <if test="status!=null">
            #{status},
        </if>
        #{userId})
    </insert>

    <update id="modifyProblemIdentify">
        update t_problem_check set
        <if test="lng!=null">
            lng=#{lng},
        </if>
        <if test="lat!=null">
            lat=#{lat},
        </if>
        <if test="address!=null">
            address=#{address},
        </if>
        <if test="info!=null">
            info=#{info},
        </if>
        <if test="imageUrl!=null">
            image_url=#{imageUrl},
        </if>
        <if test="isChecked!=null">
            is_checked=#{isChecked},
        </if>
        <if test="status!=null">
            status=#{status},
        </if>
        update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <update id="deleteProblemIdentify">
        update t_problem_check set
        is_delete=1, update_by=#{userId}
        where id=#{id} and is_delete=0;
        delete from t_problem_re where problem_check_id=#{id};
    </update>

    <select id="exportProblem" resultType="com.uav.ops.dto.res.ProblemResDTO">
        select p.id, p.title, p.type_id, pt.type_name, p.problem_level, p.status, p.after_pic, p.is_use, p.create_by as check_id,
        p.solve_time, p.solve_duration, p.create_date, p.rectify_user_id, p.rectify_time, p.rectify_measure, p.remark,
        case when p.info is null or p.info='' then pc.info else p.info end as info, ue1.name as check_name,
        case when p.address is null or p.address='' then pc.address else p.address end as address, ue2.name as rectify_user_name,
        case when p.image_url is null or p.image_url='' then pc.image_url else p.image_url end as image_url,
        d1.org_name as check_dept_name, d2.org_name as rectify_dept_name
        from t_problem as p
        left join t_problem_type as pt on pt.id=p.type_id and pt.is_delete=0 and pt.status=0
        left join t_problem_re as pr on pr.problem_id=p.id
        left join t_problem_check as pc on pc.id=pr.problem_check_id and pc.is_delete=0 and pc.status=0
        left join sys_user as ue1 on ue1.id=p.create_by and ue1.is_delete=0 and ue1.status=1
        left join sys_dept as d1 on d1.id=ue1.main_dept and d1.is_delete=0
        left join sys_user as ue2 on ue2.id=p.rectify_user_id and ue2.is_delete=0 and ue2.status=1
        left join sys_dept as d2 on d2.id=ue2.main_dept and d2.is_delete=0
        where p.is_delete=0 and p.is_use=1
        <if test="name!=null and name!=''">
            and p.title like concat('%', #{name}, '%')
        </if>
        <if test="startTime!=null and startTime!=''">
            and p.create_date>=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and #{endTime}>=p.create_date
        </if>
        <if test="typeId!=null and typeId!=''">
            and p.type_id=#{typeId}
        </if>
        <if test="status!=null">
            and p.status=#{status}
        </if>
        group by p.id
        order by p.create_date desc
    </select>

    <select id="listProblem" resultType="com.uav.ops.dto.res.ProblemResDTO">
        select p.id, p.title, p.type_id, pt.type_name, p.problem_level, p.status, p.after_pic, p.is_use, p.create_by as check_id,
        p.solve_time, p.solve_duration, p.create_date, p.rectify_user_id, p.rectify_time, p.rectify_measure, p.remark,
        case when p.info is null or p.info='' then pc.info else p.info end as info, ue1.real_name as check_name,
        case when p.address is null or p.address='' then pc.address else p.address end as address, ue2.real_name as rectify_user_name,
        case when p.image_url is null or p.image_url='' then pc.image_url else p.image_url end as image_url
        from t_problem as p
        left join t_problem_type as pt on pt.id=p.type_id and pt.is_delete=0 and pt.status=0
        left join t_problem_re as pr on pr.problem_id=p.id
        left join t_problem_check as pc on pc.id=pr.problem_check_id and pc.is_delete=0 and pc.status=0
        left join sys_user_ext as ue1 on ue1.user_id=p.create_by and ue1.is_delete=0 and ue1.status=0
        left join sys_user_ext as ue2 on ue2.user_id=p.rectify_user_id and ue2.is_delete=0 and ue2.status=0
        where p.is_delete=0 and p.is_use=1 or (p.is_use=0 and p.create_by=#{userId})
        <if test="name!=null and name!=''">
            and p.title like concat('%', #{name}, '%')
        </if>
        <if test="startTime!=null and startTime!=''">
            and p.create_date>=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and #{endTime}>=p.create_date
        </if>
        <if test="typeId!=null and typeId!=''">
            and p.type_id=#{typeId}
        </if>
        <if test="status!=null">
            and p.status=#{status}
        </if>
        group by p.id
        order by p.create_date desc
    </select>

    <select id="getProblemDetail" resultType="com.uav.ops.dto.res.ProblemDetailResDTO">
        select p.id, p.title, p.type_id, pt.type_name, p.problem_level, p.status, p.after_pic, p.is_use, p.create_by as check_id,
        p.solve_time, p.solve_duration, p.create_date, p.rectify_user_id, p.rectify_time, p.rectify_measure, p.remark,
        case when p.info is null or p.info='' then pc.info else p.info end as info, ue1.real_name as check_name,
        case when p.address is null or p.address='' then pc.address else p.address end as address, ue2.real_name as rectify_user_name,
        case when p.image_url is null or p.image_url='' then pc.image_url else p.image_url end as image_url
        from t_problem as p
        left join t_problem_type as pt on pt.id=p.type_id and pt.is_delete=0 and pt.status=0
        left join t_problem_re as pr on pr.problem_id=p.id
        left join t_problem_check as pc on pc.id=pr.problem_check_id and pc.is_delete=0 and pc.status=0
        left join sys_user_ext as ue1 on ue1.user_id=p.create_by and ue1.is_delete=0 and ue1.status=0
        left join sys_user_ext as ue2 on ue2.user_id=p.rectify_user_id and ue2.is_delete=0 and ue2.status=0
        where p.is_delete=0 and p.id=#{id}
        group by p.id
    </select>

    <select id="getProblemIdentifyByProblemId" resultType="com.uav.ops.dto.res.ProblemIdentifyResDTO">
        select pc.id, pc.lng, pc.lat, pc.address, pc.info, pc.image_url, pc.is_checked, pc.status, pc.create_date
        from t_problem_re as pr
        left join t_problem_check as pc on pr.problem_check_id=pc.id
        where pr.problem_id=#{id} and pc.is_delete=0 and pc.status=0
        order by pc.create_date desc
    </select>

    <select id="selectProblemIsExist" resultType="java.lang.Integer">
        select count(1) from t_problem
        where title=#{title} and type_id=#{typeId} and is_delete=0
        <if test="id!=null and id!=''">
            and id!=#{id}
        </if>
        limit 1
    </select>

    <insert id="addProblem">
        insert into t_problem(id, title, type_id, problem_level,
        <if test="info!=null and info!=''">
            info,
        </if>
        <if test="address!=null and address!=''">
            address,
        </if>
        <if test="imageUrl!=null and imageUrl!=''">
            image_url,
        </if>
        <if test="rectifyUserId!=null and rectifyUserId!=''">
            rectify_user_id,
        </if>
        is_use, create_by)
        value (#{id}, #{title}, #{typeId}, #{problemLevel},
        <if test="info!=null and info!=''">
            #{info},
        </if>
        <if test="address!=null and address!=''">
            #{address},
        </if>
        <if test="imageUrl!=null and imageUrl!=''">
            #{imageUrl},
        </if>
        <if test="rectifyUserId!=null and rectifyUserId!=''">
            #{rectifyUserId},
        </if>
        #{isUse}, #{userId})
    </insert>

    <update id="modifyProblem">
        update t_problem set
        <if test="title!=null">
            title=#{title},
        </if>
        <if test="info!=null">
            info=#{info},
        </if>
        <if test="address!=null">
            address=#{address},
        </if>
        <if test="imageUrl!=null">
            image_url=#{imageUrl},
        </if>
        <if test="typeId!=null">
            type_id=#{typeId},
        </if>
        <if test="problemLevel!=null">
            problem_level=#{problemLevel},
        </if>
        <if test="rectifyUserId!=null">
            rectify_user_id=#{rectifyUserId},
        </if>
        <if test="isUse!=null">
            is_use=#{isUse},
        </if>
        update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <update id="deleteProblem">
        update t_problem set
        is_delete=1, update_by=#{userId}
        where id=#{id} and is_delete=0;
        delete from t_problem_re where problem_id=#{id};
    </update>

    <update id="rectifyProblem">
        update t_problem set
        rectify_time=now(),
        <if test="rectifyMeasure!=null">
            rectify_measure=#{rectifyMeasure},
        </if>
        <if test="afterPic!=null">
            after_pic=#{afterPic},
        </if>
        <if test="remark!=null">
            remark=#{remark},
        </if>
        update_by=#{createBy}, status=1
        where id=#{problemId} and rectify_user_id=#{createBy};
    </update>

    <update id="solveProblem">
        update t_problem set
        <if test="status==0">
            status=0, rectify_time=null, rectify_measure=null, after_pic=null, remark=null,
        </if>
        <if test="status==1">
            solve_time=now(), solve_duration=TIMESTAMPDIFF(HOUR, create_date, now()), status=2,
        </if>
        update_by=#{createBy}
        where id=#{problemId} and create_by=#{createBy} and status=1
    </update>

    <insert id="insertProblemRe">
        insert into t_problem_re(id, problem_id, problem_check_id)
        values
        <foreach collection="identifyIds" index="index" item="identifyId" separator=",">
            (REPLACE(UUID(), '-', ''), #{problemId}, #{identifyId})
        </foreach>
        ;
        update t_problem_check set
        is_checked=1, update_by=#{userId}
        where id in (
        <foreach collection="identifyIds" index="index" item="identifyId" separator=",">
            #{identifyId}
        </foreach>
        );
    </insert>

    <delete id="deleteProblemRe">
        delete from t_problem_re where problem_id=#{problemId} and problem_check_id in (
        <foreach collection="identifyIds" index="index" item="identifyId" separator=",">
            #{identifyId}
        </foreach>
        );
        update t_problem_check set
        is_checked=0, update_by=#{userId}
        where id in (
        <foreach collection="identifyIds" index="index" item="identifyId" separator=",">
            #{identifyId}
        </foreach>
        );
    </delete>

    <select id="listProblemWarning" resultType="com.uav.ops.dto.res.ProblemWarningResDTO">
        select pw.id, pw.warning_info, pw.problem_id, pw.status, pw.create_date, p.title as problem_title
        from t_problem_warning as pw
        left join t_problem as p on p.id=pw.problem_id and p.is_delete=0
        where pw.is_delete=0
        <if test="startTime!=null and startTime!=''">
            and pw.create_date>=#{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and #{endTime}>=pw.create_date
        </if>
        <if test="status!=null">
            and pw.status=#{status}
        </if>
        order by pw.create_date desc
    </select>

    <select id="getProblemWarningDetail" resultType="com.uav.ops.dto.res.ProblemWarningResDTO">
        select pw.id, pw.warning_info, pw.problem_id, pw.status, pw.create_date, p.title as problem_title
        from t_problem_warning as pw
        left join t_problem as p on p.id=pw.problem_id and p.is_delete=0
        where pw.is_delete=0 and pw.id=#{id}
    </select>

    <insert id="addProblemWarning">
        insert into t_problem_warning(id, warning_info, problem_id,
        <if test="status!=null">
            status,
        </if>
        create_by)
        value (#{id}, #{warningInfo}, #{problemId},
        <if test="status!=null">
            #{status},
        </if>
        #{userId})
    </insert>

    <update id="closeProblemWarning">
        update t_problem_warning set
        status=#{status}, update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <update id="deleteProblemWarning">
        update t_problem_warning set
        is_delete=1, update_by=#{userId}
        where id=#{id} and is_delete=0
    </update>

    <select id="monthlyProblemNum" resultType="com.uav.ops.dto.res.MonthlyProblemNumResDTO">
        select a.* from (
        SELECT "1月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="01月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "2月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="02月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "3月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="03月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "4月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="04月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "5月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="05月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "6月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="06月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "7月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="07月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "8月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="08月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "9月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="09月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "10月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="10月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "11月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="11月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1
        UNION
        SELECT "12月" AS month, count(id) as num
        from t_problem
        where DATE_FORMAT(create_date, '%m月')="12月" and DATE_FORMAT(create_date, '%Y')=#{year} and is_delete=0 and is_use=1) as a
    </select>

    <select id="problemNum" resultType="java.lang.Integer">
        select count(id) from t_problem where is_delete=0
        and type_id=#{typeId} and date_format(create_date, '%Y-%m')=#{month}
    </select>

    <select id="solveProblemNum" resultType="java.lang.Integer">
        select count(id) from t_problem where status=2 and is_delete=0
        and type_id=#{typeId} and date_format(create_date, '%Y-%m')=#{month}
    </select>

    <select id="notSolveProblemNum" resultType="java.lang.Integer">
        select count(id) from t_problem where status!=2 and is_delete=0
        and type_id=#{typeId} and date_format(create_date, '%Y-%m')=#{month}
    </select>

    <select id="typeProblemNum" resultType="com.uav.ops.dto.res.MonthlyProblemNumResDTO">
        select a.* from (
        SELECT "1月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="01月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "2月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="02月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "3月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="03月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "4月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="04月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "5月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="05月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "6月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="06月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "7月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="07月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "8月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="08月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "9月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="09月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "10月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="10月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "11月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="11月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1
        UNION
        SELECT "12月" AS month, count(id) as num
        from t_problem where DATE_FORMAT(create_date, '%m月')="12月" and DATE_FORMAT(create_date, '%Y')=#{year}
        and type_id=#{typeId} and is_delete=0 and is_use=1) as a
    </select>

    <select id="selectRectifyUserStatus" resultType="java.lang.Integer">
        select count(1) from t_problem
        where id=#{problemId} and is_delete=0 and rectify_user_id=#{userId} and status=0
        limit 1
    </select>

    <select id="selectCheckUserStatus" resultType="java.lang.Integer">
        select count(1) from t_problem
        where id=#{problemId} and is_delete=0 and create_by=#{userId} and status=1
        limit 1
    </select>
</mapper>